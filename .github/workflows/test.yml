### A CI workflow template that runs linting and python testing

name: Test tap-planetscaleapi

on:
  push:
    branches: [main]
    paths:
    - .github/workflows/test.yml
    - tap_planetscaleapi/**
    - tests/**
    - pyproject.toml
    - tox.ini
    - uv.lock
  pull_request:
    branches: [main]
    paths:
    - .github/workflows/test.yml
    - tap_planetscaleapi/**
    - tests/**
    - pyproject.toml
    - tox.ini
    - uv.lock
  schedule:
  - cron: "0 10 * * *"
  workflow_dispatch:

env:
  FORCE_COLOR: "1"

jobs:
  pytest:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        python-version:
        - "3.10"
        - "3.11"
        - "3.12"
        - "3.13"
        - "3.14"
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@557e51de59eb14aaaba2ed9621916900a91d50c6 # v6.6.1
      with:
        version: "latest"
    - name: Test with pytest
      env:
        TAP_PLANETSCALEAPI_SERVICE_TOKEN_ID: ${{ secrets.TAP_PLANETSCALEAPI_SERVICE_TOKEN_ID }}
        TAP_PLANETSCALEAPI_SERVICE_TOKEN: ${{ secrets.TAP_PLANETSCALEAPI_SERVICE_TOKEN }}
      run: |
        uv run pytest
    - name: Static type checking
      run: |
        uv run mypy tap_planetscaleapi
